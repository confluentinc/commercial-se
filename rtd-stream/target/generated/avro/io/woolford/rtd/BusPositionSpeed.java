/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.woolford.rtd;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class BusPositionSpeed extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8087968130112895879L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BusPositionSpeed\",\"namespace\":\"io.woolford.rtd\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"location\",\"type\":{\"type\":\"record\",\"name\":\"Location\",\"fields\":[{\"name\":\"lon\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"}]}},{\"name\":\"bearing\",\"type\":\"double\"},{\"name\":\"milesPerHour\",\"type\":\"double\"},{\"name\":\"h3\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BusPositionSpeed> ENCODER =
      new BinaryMessageEncoder<BusPositionSpeed>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BusPositionSpeed> DECODER =
      new BinaryMessageDecoder<BusPositionSpeed>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BusPositionSpeed> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BusPositionSpeed> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BusPositionSpeed> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BusPositionSpeed>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BusPositionSpeed to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BusPositionSpeed from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BusPositionSpeed instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BusPositionSpeed fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence id;
   private long timestamp;
   private io.woolford.rtd.Location location;
   private double bearing;
   private double milesPerHour;
   private java.lang.CharSequence h3;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BusPositionSpeed() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param timestamp The new value for timestamp
   * @param location The new value for location
   * @param bearing The new value for bearing
   * @param milesPerHour The new value for milesPerHour
   * @param h3 The new value for h3
   */
  public BusPositionSpeed(java.lang.CharSequence id, java.lang.Long timestamp, io.woolford.rtd.Location location, java.lang.Double bearing, java.lang.Double milesPerHour, java.lang.CharSequence h3) {
    this.id = id;
    this.timestamp = timestamp;
    this.location = location;
    this.bearing = bearing;
    this.milesPerHour = milesPerHour;
    this.h3 = h3;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return timestamp;
    case 2: return location;
    case 3: return bearing;
    case 4: return milesPerHour;
    case 5: return h3;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: timestamp = (java.lang.Long)value$; break;
    case 2: location = (io.woolford.rtd.Location)value$; break;
    case 3: bearing = (java.lang.Double)value$; break;
    case 4: milesPerHour = (java.lang.Double)value$; break;
    case 5: h3 = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public io.woolford.rtd.Location getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(io.woolford.rtd.Location value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'bearing' field.
   * @return The value of the 'bearing' field.
   */
  public double getBearing() {
    return bearing;
  }


  /**
   * Sets the value of the 'bearing' field.
   * @param value the value to set.
   */
  public void setBearing(double value) {
    this.bearing = value;
  }

  /**
   * Gets the value of the 'milesPerHour' field.
   * @return The value of the 'milesPerHour' field.
   */
  public double getMilesPerHour() {
    return milesPerHour;
  }


  /**
   * Sets the value of the 'milesPerHour' field.
   * @param value the value to set.
   */
  public void setMilesPerHour(double value) {
    this.milesPerHour = value;
  }

  /**
   * Gets the value of the 'h3' field.
   * @return The value of the 'h3' field.
   */
  public java.lang.CharSequence getH3() {
    return h3;
  }


  /**
   * Sets the value of the 'h3' field.
   * @param value the value to set.
   */
  public void setH3(java.lang.CharSequence value) {
    this.h3 = value;
  }

  /**
   * Creates a new BusPositionSpeed RecordBuilder.
   * @return A new BusPositionSpeed RecordBuilder
   */
  public static io.woolford.rtd.BusPositionSpeed.Builder newBuilder() {
    return new io.woolford.rtd.BusPositionSpeed.Builder();
  }

  /**
   * Creates a new BusPositionSpeed RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BusPositionSpeed RecordBuilder
   */
  public static io.woolford.rtd.BusPositionSpeed.Builder newBuilder(io.woolford.rtd.BusPositionSpeed.Builder other) {
    if (other == null) {
      return new io.woolford.rtd.BusPositionSpeed.Builder();
    } else {
      return new io.woolford.rtd.BusPositionSpeed.Builder(other);
    }
  }

  /**
   * Creates a new BusPositionSpeed RecordBuilder by copying an existing BusPositionSpeed instance.
   * @param other The existing instance to copy.
   * @return A new BusPositionSpeed RecordBuilder
   */
  public static io.woolford.rtd.BusPositionSpeed.Builder newBuilder(io.woolford.rtd.BusPositionSpeed other) {
    if (other == null) {
      return new io.woolford.rtd.BusPositionSpeed.Builder();
    } else {
      return new io.woolford.rtd.BusPositionSpeed.Builder(other);
    }
  }

  /**
   * RecordBuilder for BusPositionSpeed instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BusPositionSpeed>
    implements org.apache.avro.data.RecordBuilder<BusPositionSpeed> {

    private java.lang.CharSequence id;
    private long timestamp;
    private io.woolford.rtd.Location location;
    private io.woolford.rtd.Location.Builder locationBuilder;
    private double bearing;
    private double milesPerHour;
    private java.lang.CharSequence h3;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.woolford.rtd.BusPositionSpeed.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasLocationBuilder()) {
        this.locationBuilder = io.woolford.rtd.Location.newBuilder(other.getLocationBuilder());
      }
      if (isValidValue(fields()[3], other.bearing)) {
        this.bearing = data().deepCopy(fields()[3].schema(), other.bearing);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.milesPerHour)) {
        this.milesPerHour = data().deepCopy(fields()[4].schema(), other.milesPerHour);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.h3)) {
        this.h3 = data().deepCopy(fields()[5].schema(), other.h3);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing BusPositionSpeed instance
     * @param other The existing instance to copy.
     */
    private Builder(io.woolford.rtd.BusPositionSpeed other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = true;
      }
      this.locationBuilder = null;
      if (isValidValue(fields()[3], other.bearing)) {
        this.bearing = data().deepCopy(fields()[3].schema(), other.bearing);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.milesPerHour)) {
        this.milesPerHour = data().deepCopy(fields()[4].schema(), other.milesPerHour);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.h3)) {
        this.h3 = data().deepCopy(fields()[5].schema(), other.h3);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder setTimestamp(long value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder clearTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public io.woolford.rtd.Location getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder setLocation(io.woolford.rtd.Location value) {
      validate(fields()[2], value);
      this.locationBuilder = null;
      this.location = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'location' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.woolford.rtd.Location.Builder getLocationBuilder() {
      if (locationBuilder == null) {
        if (hasLocation()) {
          setLocationBuilder(io.woolford.rtd.Location.newBuilder(location));
        } else {
          setLocationBuilder(io.woolford.rtd.Location.newBuilder());
        }
      }
      return locationBuilder;
    }

    /**
     * Sets the Builder instance for the 'location' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.woolford.rtd.BusPositionSpeed.Builder setLocationBuilder(io.woolford.rtd.Location.Builder value) {
      clearLocation();
      locationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'location' field has an active Builder instance
     * @return True if the 'location' field has an active Builder instance
     */
    public boolean hasLocationBuilder() {
      return locationBuilder != null;
    }

    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder clearLocation() {
      location = null;
      locationBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'bearing' field.
      * @return The value.
      */
    public double getBearing() {
      return bearing;
    }


    /**
      * Sets the value of the 'bearing' field.
      * @param value The value of 'bearing'.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder setBearing(double value) {
      validate(fields()[3], value);
      this.bearing = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'bearing' field has been set.
      * @return True if the 'bearing' field has been set, false otherwise.
      */
    public boolean hasBearing() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'bearing' field.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder clearBearing() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'milesPerHour' field.
      * @return The value.
      */
    public double getMilesPerHour() {
      return milesPerHour;
    }


    /**
      * Sets the value of the 'milesPerHour' field.
      * @param value The value of 'milesPerHour'.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder setMilesPerHour(double value) {
      validate(fields()[4], value);
      this.milesPerHour = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'milesPerHour' field has been set.
      * @return True if the 'milesPerHour' field has been set, false otherwise.
      */
    public boolean hasMilesPerHour() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'milesPerHour' field.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder clearMilesPerHour() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'h3' field.
      * @return The value.
      */
    public java.lang.CharSequence getH3() {
      return h3;
    }


    /**
      * Sets the value of the 'h3' field.
      * @param value The value of 'h3'.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder setH3(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.h3 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'h3' field has been set.
      * @return True if the 'h3' field has been set, false otherwise.
      */
    public boolean hasH3() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'h3' field.
      * @return This builder.
      */
    public io.woolford.rtd.BusPositionSpeed.Builder clearH3() {
      h3 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BusPositionSpeed build() {
      try {
        BusPositionSpeed record = new BusPositionSpeed();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (java.lang.Long) defaultValue(fields()[1]);
        if (locationBuilder != null) {
          try {
            record.location = this.locationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("location"));
            throw e;
          }
        } else {
          record.location = fieldSetFlags()[2] ? this.location : (io.woolford.rtd.Location) defaultValue(fields()[2]);
        }
        record.bearing = fieldSetFlags()[3] ? this.bearing : (java.lang.Double) defaultValue(fields()[3]);
        record.milesPerHour = fieldSetFlags()[4] ? this.milesPerHour : (java.lang.Double) defaultValue(fields()[4]);
        record.h3 = fieldSetFlags()[5] ? this.h3 : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BusPositionSpeed>
    WRITER$ = (org.apache.avro.io.DatumWriter<BusPositionSpeed>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BusPositionSpeed>
    READER$ = (org.apache.avro.io.DatumReader<BusPositionSpeed>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.id);

    out.writeLong(this.timestamp);

    this.location.customEncode(out);

    out.writeDouble(this.bearing);

    out.writeDouble(this.milesPerHour);

    out.writeString(this.h3);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);

      this.timestamp = in.readLong();

      if (this.location == null) {
        this.location = new io.woolford.rtd.Location();
      }
      this.location.customDecode(in);

      this.bearing = in.readDouble();

      this.milesPerHour = in.readDouble();

      this.h3 = in.readString(this.h3 instanceof Utf8 ? (Utf8)this.h3 : null);

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          break;

        case 1:
          this.timestamp = in.readLong();
          break;

        case 2:
          if (this.location == null) {
            this.location = new io.woolford.rtd.Location();
          }
          this.location.customDecode(in);
          break;

        case 3:
          this.bearing = in.readDouble();
          break;

        case 4:
          this.milesPerHour = in.readDouble();
          break;

        case 5:
          this.h3 = in.readString(this.h3 instanceof Utf8 ? (Utf8)this.h3 : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










